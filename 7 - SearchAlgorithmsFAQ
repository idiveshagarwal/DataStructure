#include<stdio.h>

// Function for linear search
// Parameters: arr - array to be searched, size - size of the array, element - element to be found
// Returns: index of the element if found, -1 otherwise
int linearSearch(int arr[], int size, int element) {
    for (int i = 0; i < size; i++) {
        if (arr[i] == element) {
            return i;
        }
    }
    return -1;
}

// Function for binary search
// Parameters: arr - sorted array to be searched, size - size of the array, element - element to be found
// Returns: index of the element if found, -1 otherwise
int binarySearch(int arr[], int size, int element) {
    int low, mid, high;
    low = 0;
    high = size - 1;
    
    // Keep searching until low <= high
    while (low <= high) {
        mid = (low + high) / 2;
        
        if (arr[mid] == element) {
            return mid;
        }
        
        // Adjust search range based on comparison of mid element with the target element
        if (arr[mid] < element) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    } 
    return -1;
}

// Main function
int main() {
    // Sorted array for binary search
    int arr[] = {1, 3, 5, 56, 64, 73, 123, 225, 444};
    int size = sizeof(arr) / sizeof(int);
    int element = 444;
    
    // Calling binarySearch function to find the element in the array
    int searchIndex = binarySearch(arr, size, element);
    
    // Displaying the result
    printf("The element %d was found at index %d \n", element, searchIndex);
    
    return 0;
}
